<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">
    <context:component-scan base-package="com.pcgrw.mqdemo.rabbitmq"/>
    <!-- json数据转换 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>
    
    <!-- 定义连接工厂
    publisher-confirms为true时，确认失败等情况才会执行
    -->
    <rabbit:connection-factory id="connectionFactory" host="192.168.17.129" port="5672" username="test" password="test"
                               virtual-host="test" publisher-confirms="true"/>
    <!-- 定义rabbitmq模板
        queue="" 如果发送到队列，则写队列；
        exchange="" 如果发送到交换机，则写交换机；
        routing-key="" 定义路由的关键字
    -->
    <rabbit:template id="template" connection-factory="connectionFactory" confirm-callback="confirmCallbackListener" return-callback="returnCallbackListener" mandatory="true"/>
    <!-- 定义一个管理者 -->
    <rabbit:admin connection-factory="connectionFactory"/>
    <!-- 消息是发送到交换机还是队列 -->

    <!-- 定义队列 -->
    <rabbit:queue name="confirmQueue" auto-declare="true"/>
    <!-- 定义交换机 -->
    <rabbit:direct-exchange name="directExchange" id="directExchange">
        <rabbit:bindings>
            <rabbit:binding queue="confirmQueue"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!-- 定义一个监听容器，当接收到消息后会执行内部的配置 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual">
        <rabbit:listener queues="confirmQueue" ref="receiveConfirmTestListener"/>
    </rabbit:listener-container>
</beans>